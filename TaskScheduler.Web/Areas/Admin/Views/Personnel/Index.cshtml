@using TaskScheduler.Entities
@model IEnumerable<Personnel>


@{
    ViewData["Title"] = "Personel Yönetimi";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>@ViewData["Title"]</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> Yeni Personel Ekle
    </a>
</div>

<div class="row">
    @if (!Model.Any())
    {
        <div class="col-12">
            <div class="alert alert-info" role="alert">
                Sistemde kayıtlı personel bulunmamaktadır.
            </div>
        </div>
    }
    else
    {
        @foreach (var item in Model)
        {
            <div class="col-12 col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@item.FirstName @item.LastName</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@item.Email</h6>
                        <p class="card-text">
                            <strong>Durum:</strong> 
                            @if (item.IsActive)
                            {
                                <span class="badge bg-success">Aktif</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Pasif</span>
                            }
                        </p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Düzenle</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Detay</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Sil</a>
                    </div>
                </div>
            </div>
        }
    }
</div>